"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var parameter_checker_1 = require("../api-utils/api-utils/parameter-checker");
var section_properties_history_items_1 = require("../core/model/history/items/section-properties-history-items");
var constants_1 = require("@devexpress/utils/lib/constants");
var search_1 = require("@devexpress/utils/lib/utils/search");
var interval_1 = require("./interval");
var size_1 = require("./size");
var sub_document_1 = require("./sub-document");
var SectionApi = (function () {
    function SectionApi(processor, section) {
        this._section = section;
        this._processor = processor;
    }
    Object.defineProperty(SectionApi.prototype, "index", {
        get: function () {
            return search_1.SearchUtils.normedInterpolationIndexOf(this._processor.modelManager.model.sections, function (s) { return s.startLogPosition.value; }, this._section.startLogPosition.value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SectionApi.prototype, "interval", {
        get: function () {
            return interval_1.convertToIntervalApi(this._section.interval);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SectionApi.prototype, "margins", {
        get: function () {
            var margins = this._section.sectionProperties.margins.clone();
            return new size_1.MarginsApi(margins.left, margins.right, margins.top, margins.bottom);
        },
        set: function (margins) {
            var _this = this;
            margins = parameter_checker_1.ApiParametersChecker.check(margins, 1, false, [
                parameter_checker_1.ApiParametersChecker.objectDescriptor('margins', 'Margins', function (val) { return val; })
            ]);
            parameter_checker_1.ApiParametersChecker.check(margins.left, 1, false, [
                parameter_checker_1.ApiParametersChecker.numberDescriptor('margins.left', function (val) { return val; }, 0, constants_1.Constants.MAX_SAFE_INTEGER)
            ]);
            parameter_checker_1.ApiParametersChecker.check(margins.left, 1, false, [
                parameter_checker_1.ApiParametersChecker.numberDescriptor('margins.right', function (val) { return val; }, 0, constants_1.Constants.MAX_SAFE_INTEGER)
            ]);
            parameter_checker_1.ApiParametersChecker.check(margins.left, 1, false, [
                parameter_checker_1.ApiParametersChecker.numberDescriptor('margins.top', function (val) { return val; }, 0, constants_1.Constants.MAX_SAFE_INTEGER)
            ]);
            parameter_checker_1.ApiParametersChecker.check(margins.left, 1, false, [
                parameter_checker_1.ApiParametersChecker.numberDescriptor('margins.bottom', function (val) { return val; }, 0, constants_1.Constants.MAX_SAFE_INTEGER)
            ]);
            this._processor.beginUpdate();
            this._processor.modelManager.history.addTransaction(function (history) {
                history.addAndRedo(new section_properties_history_items_1.SectionMarginLeftHistoryItem(_this._processor.modelManager.modelManipulator, _this._section.interval, margins.left));
                history.addAndRedo(new section_properties_history_items_1.SectionMarginRightHistoryItem(_this._processor.modelManager.modelManipulator, _this._section.interval, margins.right));
                history.addAndRedo(new section_properties_history_items_1.SectionMarginTopHistoryItem(_this._processor.modelManager.modelManipulator, _this._section.interval, margins.top));
                history.addAndRedo(new section_properties_history_items_1.SectionMarginBottomHistoryItem(_this._processor.modelManager.modelManipulator, _this._section.interval, margins.bottom));
            });
            this._processor.endUpdate();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SectionApi.prototype, "columnCount", {
        get: function () {
            return this._section.sectionProperties.columnCount;
        },
        set: function (columnCount) {
            var _this = this;
            columnCount = parameter_checker_1.ApiParametersChecker.check(columnCount, 1, false, [
                parameter_checker_1.ApiParametersChecker.numberDescriptor('columnCount', function (val) { return val; }, 1, 64)
            ]);
            this._processor.modelManager.history.addTransaction(function (history) {
                history.addAndRedo(new section_properties_history_items_1.SectionColumnCountHistoryItem(_this._processor.modelManager.modelManipulator, _this._section.interval, columnCount));
                history.addAndRedo(new section_properties_history_items_1.SectionEqualWidthColumnsHistoryItem(_this._processor.modelManager.modelManipulator, _this._section.interval, true));
            });
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SectionApi.prototype, "pageSize", {
        get: function () {
            var size = this._section.sectionProperties.pageSize.clone();
            return new size_1.SizeApi(size.width, size.height);
        },
        set: function (size) {
            size = parameter_checker_1.ApiParametersChecker.check(size, 1, false, [
                parameter_checker_1.ApiParametersChecker.objectDescriptor('size', 'Size', function (val) { return val; })
            ]);
            parameter_checker_1.ApiParametersChecker.check(size.width, 1, false, [
                parameter_checker_1.ApiParametersChecker.numberDescriptor('size.width', function (val) { return val; }, 1, constants_1.Constants.MAX_SAFE_INTEGER)
            ]);
            parameter_checker_1.ApiParametersChecker.check(size.height, 1, false, [
                parameter_checker_1.ApiParametersChecker.numberDescriptor('size.height', function (val) { return val; }, 1, constants_1.Constants.MAX_SAFE_INTEGER)
            ]);
            var sectionInterval = this._section.interval;
            var secProps = this._section.sectionProperties;
            var newLandscape = size.width > size.height;
            var oldLandscape = secProps.landscape;
            this._processor.modelManager.history.beginTransaction();
            if (oldLandscape !== newLandscape)
                this._processor.modelManager.history.addAndRedo(new section_properties_history_items_1.SectionLandscapeHistoryItem(this._processor.modelManager.modelManipulator, sectionInterval, newLandscape));
            if (secProps.pageWidth !== size.width)
                this._processor.modelManager.history.addAndRedo(new section_properties_history_items_1.SectionPageWidthHistoryItem(this._processor.modelManager.modelManipulator, sectionInterval, size.width));
            if (secProps.pageHeight !== size.height)
                this._processor.modelManager.history.addAndRedo(new section_properties_history_items_1.SectionPageHeightHistoryItem(this._processor.modelManager.modelManipulator, sectionInterval, size.height));
            this._processor.modelManager.history.endTransaction();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SectionApi.prototype, "headerOffset", {
        get: function () {
            return this._section.sectionProperties.headerOffset;
        },
        set: function (offset) {
            offset = parameter_checker_1.ApiParametersChecker.check(offset, 1, false, [
                parameter_checker_1.ApiParametersChecker.numberDescriptor('offset', function (val) { return val; }, 0, constants_1.Constants.MAX_SAFE_INTEGER)
            ]);
            this._processor.modelManager.history.addAndRedo(new section_properties_history_items_1.SectionHeaderOffsetHistoryItem(this._processor.modelManager.modelManipulator, this._section.interval, offset));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SectionApi.prototype, "footerOffset", {
        get: function () {
            return this._section.sectionProperties.footerOffset;
        },
        set: function (offset) {
            offset = parameter_checker_1.ApiParametersChecker.check(offset, 1, false, [
                parameter_checker_1.ApiParametersChecker.numberDescriptor('offset', function (val) { return val; }, 0, constants_1.Constants.MAX_SAFE_INTEGER)
            ]);
            this._processor.modelManager.history.addAndRedo(new section_properties_history_items_1.SectionFooterOffsetHistoryItem(this._processor.modelManager.modelManipulator, this._section.interval, offset));
        },
        enumerable: true,
        configurable: true
    });
    SectionApi.prototype.getHeader = function (type, createIfNotExist) {
        if (type === void 0) { type = sub_document_1.HeaderFooterTypeApi.Primary; }
        if (createIfNotExist === void 0) { createIfNotExist = true; }
        var hfType = parameter_checker_1.ApiParametersChecker.check(type, 1, false, [
            parameter_checker_1.ApiParametersChecker.enumDescriptor('type', function (val) { return val; }, sub_document_1.HeaderFooterTypeApi, 'HeaderFooterType')
        ]);
        var sdInfo = this._section.headers.getObject(hfType);
        if (!sdInfo && createIfNotExist) {
            var sectionIndex = search_1.SearchUtils.normedInterpolationIndexOf(this._processor.modelManager.model.sections, function (s) { return s.startLogPosition.value; }, this._section.startLogPosition.value);
            this._processor.modelManager.modelManipulator.header.insertHeaderFooter(sectionIndex, true, hfType);
            sdInfo = this._section.headers.getObject(hfType);
        }
        return sdInfo ? new sub_document_1.SubDocumentApi(this._processor, sdInfo.getSubDocument(this._processor.modelManager.model)) : null;
    };
    SectionApi.prototype.getFooter = function (type, createIfNotExist) {
        if (type === void 0) { type = sub_document_1.HeaderFooterTypeApi.Primary; }
        if (createIfNotExist === void 0) { createIfNotExist = true; }
        var hfType = parameter_checker_1.ApiParametersChecker.check(type, 1, false, [
            parameter_checker_1.ApiParametersChecker.enumDescriptor('type', function (val) { return val; }, sub_document_1.HeaderFooterTypeApi, 'HeaderFooterType')
        ]);
        var sdInfo = this._section.footers.getObject(hfType);
        if (!sdInfo && createIfNotExist) {
            var sectionIndex = search_1.SearchUtils.normedInterpolationIndexOf(this._processor.modelManager.model.sections, function (s) { return s.startLogPosition.value; }, this._section.startLogPosition.value);
            this._processor.modelManager.modelManipulator.header.insertHeaderFooter(sectionIndex, false, hfType);
            sdInfo = this._section.footers.getObject(hfType);
        }
        return sdInfo ? new sub_document_1.SubDocumentApi(this._processor, sdInfo.getSubDocument(this._processor.modelManager.model)) : null;
    };
    return SectionApi;
}());
exports.SectionApi = SectionApi;
