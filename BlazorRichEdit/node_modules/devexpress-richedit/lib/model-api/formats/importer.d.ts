import { DocumentFormat } from '../../core/document-format';
import { IDocumentImporter } from '../../core/formats/i-document-importer';
import { IModelManager } from '../../core/model-manager';
import { RichOptions } from '../../core/model/options/rich-options';
import { SubDocument } from '../../core/model/sub-document';
import { IBatchUpdatableObject } from '@devexpress/utils/lib/class/batch-updatable';
import { FixedInterval } from '@devexpress/utils/lib/intervals/fixed';
export declare function createImporter(format: DocumentFormat, throwInvalidFile?: (reason: string) => void): IDocumentImporter | null;
export declare function insertRtfInSubDocumentPublic(modelManager: IModelManager, subDocument: SubDocument, position: number, rtf: string, batchUpdatableObject: IBatchUpdatableObject, callback: (interval: FixedInterval, isRtfValid: boolean) => void): void;
export declare function insertContentInSubDocumentPublic(modelManager: IModelManager, subDocument: SubDocument, position: number, content: string | File | Blob | ArrayBuffer, batchUpdatableObject: IBatchUpdatableObject, documentFormat: DocumentFormat, callback: (interval: FixedInterval, isRtfValid: boolean) => void): void;
export declare function getRtfFromSubDocumentPublic(richOptions: RichOptions, subDocument: SubDocument, coreInterval: FixedInterval): string;
//# sourceMappingURL=importer.d.ts.map
