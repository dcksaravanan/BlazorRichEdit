"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var dxt_utils_1 = require("../../../../dxt-utils/dxt-utils/dxt-utils");
var base_types_1 = require("./base-types");
var MenuToolbarItemTemplateCreator = (function (_super) {
    tslib_1.__extends(MenuToolbarItemTemplateCreator, _super);
    function MenuToolbarItemTemplateCreator(options) {
        var _this = _super.call(this) || this;
        _this.options = options;
        return _this;
    }
    MenuToolbarItemTemplateCreator.prototype.createTemplate = function () {
        var result = _super.prototype.createTemplate.call(this);
        result.widget = 'dxMenu';
        result.options = this.getMenuOptions();
        return result;
    };
    MenuToolbarItemTemplateCreator.prototype.getMenuOptions = function () {
        var _this = this;
        dxt_utils_1.DxtUtils.correctItemsIcons(this.options.itemOptions.items);
        return {
            hideSubmenuOnMouseLeave: true,
            focusStateEnabled: false,
            selectByClick: false,
            hint: this.options.itemOptions.text,
            dataSource: [{
                    icon: this.options.itemOptions.icon ? dxt_utils_1.DxtUtils.correctIconName(this.options.itemOptions.icon) : undefined,
                    text: this.options.itemOptions.text,
                    isRootElement: true,
                    items: this.options.itemOptions.items.map(function (i) { return ({
                        beginGroup: i.beginGroup,
                        name: i.name,
                        text: i.text,
                        icon: i.icon,
                        items: i.items
                    }); })
                }],
            onSubmenuShowing: function (e) {
                setTimeout(function () {
                    var component = e.component;
                    if (component._visibleSubmenu) {
                        var content = component._visibleSubmenu._overlay.$content();
                        if (content.height() > 600)
                            content.find(".dx-submenu").height(400).dxScrollView({});
                    }
                });
            },
            onInitialized: this.options.onInitialized,
            onItemRendered: this.options.onItemRendered,
            onItemClick: this.options.onItemClick,
            elementAttr: { class: this.getCssClass() },
            onContentReady: function (e) {
                if (_this.options.itemOptions.icon && !_this.options.itemOptions.alwaysShowText) {
                    var element = e.element.classList ? e.element : e.element[0];
                    element.classList.add(MenuToolbarItemTemplateCreator.ShowTextInMenuClassName);
                }
            }
        };
    };
    MenuToolbarItemTemplateCreator.ShowTextInMenuClassName = 'dx-showTextInMenu';
    return MenuToolbarItemTemplateCreator;
}(base_types_1.ToolbarItemTemplateCreator));
exports.MenuToolbarItemTemplateCreator = MenuToolbarItemTemplateCreator;
