"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var code_pages_1 = require("../encoding/code-pages");
var decoder_base_1 = require("./decoder-base");
var russian_decoder_1 = require("./russian-decoder");
var specified_symbols_1 = require("./specified-symbols");
var DecoderHelper = (function () {
    function DecoderHelper() {
    }
    DecoderHelper.decode = function (str, codePage) {
        if (codePage == code_pages_1.CodePages.Russian)
            return russian_decoder_1.RussianDecoder.decode(str);
        else if (codePage == code_pages_1.CodePages.default)
            return decoder_base_1.DecoderBase.decode(str, specified_symbols_1.windows1250specifiedSymbols);
        else if (codePage == code_pages_1.CodePages.Ansi)
            return decoder_base_1.DecoderBase.decode(str, specified_symbols_1.windows1252specifiedSymbols);
        else if (codePage == code_pages_1.CodePages.Greek)
            return decoder_base_1.DecoderBase.decode(str, specified_symbols_1.windows1253specifiedSymbols);
        else if (codePage == code_pages_1.CodePages.Turkis)
            return decoder_base_1.DecoderBase.decode(str, specified_symbols_1.windows1254specifiedSymbols);
        else if (codePage == code_pages_1.CodePages.Hebrew)
            return decoder_base_1.DecoderBase.decode(str, specified_symbols_1.windows1255specifiedSymbols);
        else if (codePage == code_pages_1.CodePages.Arabic)
            return decoder_base_1.DecoderBase.decode(str, specified_symbols_1.windows1256specifiedSymbols);
        else if (codePage == code_pages_1.CodePages.Baltic)
            return decoder_base_1.DecoderBase.decode(str, specified_symbols_1.windows1257specifiedSymbols);
        return str;
    };
    return DecoderHelper;
}());
exports.DecoderHelper = DecoderHelper;
